# Copyright (c) 2023 SolarWinds, LLC.
# All rights reserved.

name: Build and publish ruby lambda layer

on:
  workflow_dispatch:

jobs:
  # create one arm64 ec2 instance on aws as our runner
  start_arm64_runner:
    outputs:
      matrix: ${{ steps.launch.outputs.matrix }} # this will be a json object mapping identifiers to labels and instance ids
    runs-on: ubuntu-latest
    steps:
      - uses: getsentry/action-github-app-token@v2
        id: github-token
        with:
          app_id: ${{ vars.APPLICATION_ID }}
          private_key: ${{ secrets.APPLICATION_PRIVATE_KEY }}

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.CI_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CI_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - id: launch
        uses: solarwindscloud/ec2-runner-action@main
        with:
          action: launch
          matrix: | # one identifier per line
            ubuntu:22.04
          github-token: ${{ steps.github-token.outputs.token }}
          runner-user: github
          runner-directory: /gh
          instance-type: t4g.medium
          ami-name: gha-arm64-ubuntu22-.*
          ami-owner: "858939916050"
          subnet-id: subnet-0fd499f8a50e41807
          security-group-ids: sg-0fd8d8cd6effda4a5
          tags: |
            Name=xuan-cao-ec2-runner

  # build layer on arm64 and amd64, then upload to artifacts
  build_layer:
    needs:
      - start_arm64_runner
    runs-on: ${{ matrix.arch == 'arm64' && fromJSON(needs.start_arm64_runner.outputs.matrix)[matrix.image].label || 'ubuntu-latest' }}
    strategy:
      fail-fast: false
      matrix:
        arch:
          - x86_64
          - arm64
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/setup-sam@v2

      # Build inside Docker containers
      # There is only two ruby runtime for aws lambda ruby 3.2 and 2.7
      # Since the 2.7 is not supported by otel, then we don't use it
      - name: build lambda layer
        run: |
          cd lambda/
          sam build -u -t template.yml -e BUNDLE_RUBYGEMS__PKG__GITHUB__COM=$GITHUB_RUBY_TOKEN
          ./zip_layer.sh -n ruby-layer-${{ matrix.arch }}
        env:
          GITHUB_RUBY_TOKEN: ${{ secrets.GITHUB_RUBY_TOKEN }}

      - name: Upload to artifact
        uses: actions/upload-artifact@v3
        name: Save assembled layer to build
        with:
          name: ruby-layer-${{ matrix.arch }}.zip
          path: lambda

  # extract the built layer from artifacts, then publish it based on region
  publish_layer:
    needs:
      - build_layer
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        aws_region: 
          - ap-northeast-1
          - ap-northeast-2
          - ap-south-1
          - ap-southeast-1
          - ap-southeast-2
          - ca-central-1
          - eu-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - sa-east-1
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
        arch:
          - x86_64
          - arm64
    steps:
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_LAMBDA_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_LAMBDA_ACCESS_KEY_KEY }}
          aws-region: ${{ matrix.aws_region }}

      - name: extract layer zip from artifacts
        uses: actions/download-artifact@v3
        with:
          name: ruby-layer-${{ matrix.arch }}.zip
          path: lambda

      - name: publish lambda layer
        run: |
          cd lambda/
          aws lambda publish-layer-version \
            --layer-name solarwinds-ruby-layer \
            --license-info "Apache 2.0" \
            --compatible-architectures ${{ matrix.arch }} \
            --compatible-runtimes ruby3.2 \
            --zip-file ruby-layer-${{ matrix.arch }}.zip \
            --query 'LayerVersionArn' \
            --output text

  terminate_arm64_runner:
    if: ${{ always() }}
    needs:
      - start_arm64_runner
      - build_layer
      - publish_layer
    runs-on: ubuntu-latest
    steps:
      - uses: getsentry/action-github-app-token@v2
        id: github-token
        with:
          app_id: ${{ vars.APPLICATION_ID }}
          private_key: ${{ secrets.APPLICATION_PRIVATE_KEY }}

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.CI_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CI_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - uses: solarwindscloud/ec2-runner-action@main
        with:
          action: terminate
          github-token: ${{ steps.github-token.outputs.token }}
          matrix: ${{ needs.start_arm64_runner.outputs.matrix }} # passing a matrix will terminate all runners, not just one
